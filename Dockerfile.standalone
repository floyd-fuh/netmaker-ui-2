FROM node:18-alpine3.17 as build

# LABELS
LABEL \
  org.opencontainers.image.authors="Netmaker Inc." \
  org.opencontainers.image.vendor="ReactJS" \
  org.opencontainers.image.url="local" \
  org.opencontainers.image.source="https://dockerhub.com/" \
  org.opencontainers.image.version="$VERSION" \
  org.opencontainers.image.revision="$REVISION" \
  vendor="ReactJS" \
  name="Netmaker UI" \
  version="$VERSION-$REVISION" \
  summary="The frontend of Netmaker. Netmaker builds fast, secure virtual networks." \
  description="This image contains the Netmaker frontend running with ReactJS."

WORKDIR /usr/app
COPY . /usr/app

RUN apk add --no-cache jq

# Switch for SaaS or Standalone build
ENV VITE_IS_SAAS_BUILD=false


# Standalone build mandatory vars

# This value is used if `BACKEND_URL` env var is unset.
# BACKEND_URL is used for dynamic URL injection
ENV VITE_BASE_URL=

ENV VITE_LICENSE_DASHBOARD_URL=https://account.netmaker.io
ENV VITE_NETMAKER_SUPPORT_EMAIL=help@netmaker.io

# EE customisations and branding
ENV VITE_PRODUCT_NAME=matemaker
ENV VITE_TENANT_LOGO_DARK_URL=https://www.lismore.nsw.gov.au/files/assets/public/v/1/1.-households/3.-pets-amp-animals/images/kitten.jpg
ENV VITE_TENANT_LOGO_LIGHT_URL=https://static.scientificamerican.com/sciam/cache/file/9CAE9C60-8BC5-4CA3-95C180EFACDD99FD_source.jpg
ENV VITE_TENANT_LOGO_DARK_SMALL_URL=https://cdn.britannica.com/25/172925-050-DC7E2298/black-cat-back.jpg
ENV VITE_TENANT_LOGO_LIGHT_SMALL_URL=https://www.purina.co.uk/sites/default/files/2023-03/Hero%20Pedigree%20Cats.jpg
ENV VITE_TENANT_LOGO_ALT_TEXT=matemakeralt
ENV VITE_TENANT_FAVICON_LOGO=https://www.dcnewsnow.com/wp-content/uploads/sites/14/2022/07/Cat.jpg
ENV VITE_TENANT_PRIMARY_COLOR=yellow


# Other vars

ENV VITE_NETCLIENT_BIN_URL_TEMPLATE=https://fileserver.netmaker.io/releases/download/:version/:fileName
ENV VITE_NETMAKER_TRIAL_PERIOD_DOCS_URL=https://docs.netmaker.io/install.html#after-trial-period-ends

RUN npm ci
RUN npm audit fix || echo "ATTENTION!!! Failed to automatically patch vulnerabilities" >&2
RUN npm run build


# final image
FROM nginx:1.25.1-alpine3.17

COPY ./nginx.conf /etc/nginx/conf.d/default.conf
COPY ./generate-config.sh /
COPY ./docker-entrypoint.sh /

RUN chmod +x generate-config.sh docker-entrypoint.sh

COPY --from=build /usr/app/dist /usr/share/nginx/html

EXPOSE 80
ENTRYPOINT ["/docker-entrypoint.sh"]
